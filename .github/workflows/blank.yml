name: Python CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      # Cache pip dependencies to speed up future builds
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: venv/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Create a virtual environment and install dependencies
      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run tests with pytest
        run: |
          source venv/bin/activate
          pytest

      # Deploy to Heroku (optional step)
      - name: Deploy to Heroku
        run: |
          git remote add heroku https://git.heroku.com/your-app.git
          git push heroku main
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      # Clear pip cache (optional but can help in reducing conflicts)
      - name: Clear pip cache
        run: python -m pip cache purge
